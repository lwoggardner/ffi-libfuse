name: Build

on:
  workflow_call: # from release
    inputs:
      ref:
        type: 'string'
        default: ${{github.ref}}
  pull_request:
    branches:
      - "main"
  push:
    branches:  # branches that are not used for release-please
      - "**"
      - "!main"
      - "!release-please-action"
jobs:
  build-alpine:
    if: !contains(github.event.head_commit.message, '[no-build-alpine]')
    strategy:
      matrix:
        fuse_pkg: ['fuse','fuse3']
    runs-on: ubuntu-latest
    env:
      TERM: color # Pretty spec output
      GIT_REF: ${{ inputs.ref || github.ref }}
      GIT_BASE_REF: ${{ github.base_ref || 'undefined' }}
      BUNDLE_PATH: vendor/bundle.alpine
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.GIT_REF }}
      - name: Setup Alpine Linux
        uses: jirutka/setup-alpine@v1
        with:
          packages: >
            build-base
            ${{ matrix.fuse_pkg }}
            ruby
            ruby-dev
            ruby-bundler
      - name: Preinstall
        env:
          FUSE_PKG: ${{ matrix.fuse_pkg }}
        run: .github/scripts/pre_install_alpine.sh
        shell: alpine.sh {0}
      - name: Cache gems
        uses: actions/cache@v4
        with:
         path: ${{ env.BUNDLE_PATH }}
         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
         restore-keys: |
           ${{ runner.os }}-gems-
      - name: Run tests
        run: bundle install && bundle exec rake test # only test, no rubocop etc..
        shell: alpine.sh {0}

  build:
    if: !contains(github.event.head_commit.message, '[no-build]')

    strategy:
      matrix:
        ruby-version: ['2.7','3.2','3.3']
        os: ['ubuntu-latest','ubuntu-24.04'] # mac-os when/if Macfuse can be deployed on CI images
        fuse_pkg: ['fuse','fuse3']

    runs-on: ${{ matrix.os }}
    env:
      TERM: color # Pretty spec output
      GIT_REF: ${{ inputs.ref || github.ref }}
      GIT_BASE_REF: ${{ github.base_ref || 'undefined' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.GIT_REF }}
      - name: Preinstall
        env:
          FUSE_PKG: ${{ matrix.fuse_pkg }}
        run: .github/scripts/pre_install_${{runner.os}}.sh
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake